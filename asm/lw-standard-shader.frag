#version 420
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

uniform 	vec4 _MainLightPosition;
uniform 	vec4 _MainLightColor;
uniform 	vec4 unity_SpecCube0_HDR;
uniform 	vec4 _Color;
uniform 	float _Glossiness;
uniform 	float _Metallic;
uniform 	vec4 _ShadowData;
uniform  samplerCube unity_SpecCube0;
uniform  sampler2D unity_Lightmap;
uniform  sampler2D unity_LightmapInd;
uniform  sampler2D _MainTex;
uniform  sampler2D _ScreenSpaceShadowMap;
in  vec2 vs_TEXCOORD0;
in  vec4 vs_TEXCOORD1;
in  vec3 vs_TEXCOORD3;
in  vec3 vs_TEXCOORD6;
in  vec4 vs_TEXCOORD7;
in  vec4 vs_TEXCOORD8;
layout(location = 0) out vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
vec4 u_xlat10_1;
vec3 u_xlat2;
vec3 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
vec4 u_xlat10_5;
vec3 u_xlat6;
vec3 u_xlat16_6;
vec4 u_xlat10_6;
vec2 u_xlat7;
float u_xlat16_7;
vec2 u_xlat14;
float u_xlat16_14;
float u_xlat21;
float u_xlat10_21;
float u_xlat22;
void main()
{
    u_xlat0.x = (-_Glossiness) + 1.0;
    u_xlat7.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;
    u_xlat7.x = u_xlat7.x * u_xlat0.x;
    u_xlat7.x = u_xlat7.x * 6.0;
    u_xlat14.x = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat1.xyz = u_xlat14.xxx * vs_TEXCOORD6.xyz;
    u_xlat2.xyz = vs_TEXCOORD6.xyz * u_xlat14.xxx + _MainLightPosition.xyz;
    u_xlat14.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat3.xyz = u_xlat14.xxx * vs_TEXCOORD3.xyz;
    u_xlat14.x = dot((-u_xlat1.xyz), u_xlat3.xyz);
    u_xlat14.x = u_xlat14.x + u_xlat14.x;
    u_xlat4.xyz = u_xlat3.xyz * (-u_xlat14.xxx) + (-u_xlat1.xyz);
    u_xlat14.x = dot(u_xlat3.xyz, u_xlat1.xyz);
    u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0);
    u_xlat14.x = (-u_xlat14.x) + 1.0;
    u_xlat0.z = u_xlat14.x * u_xlat14.x;
    u_xlat10_1 = textureLod(unity_SpecCube0, u_xlat4.xyz, u_xlat7.x);
    u_xlat16_7 = u_xlat10_1.w + -1.0;
    u_xlat7.x = unity_SpecCube0_HDR.w * u_xlat16_7 + 1.0;
    u_xlat7.x = max(u_xlat7.x, 0.0);
    u_xlat7.x = log2(u_xlat7.x);
    u_xlat7.x = u_xlat7.x * unity_SpecCube0_HDR.y;
    u_xlat7.x = exp2(u_xlat7.x);
    u_xlat7.x = u_xlat7.x * unity_SpecCube0_HDR.x;
    u_xlat1.xyz = u_xlat10_1.xyz * u_xlat7.xxx;
    u_xlat7.xy = u_xlat0.xz * u_xlat0.xz;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 0.5;
    u_xlat4.xy = u_xlat7.xx * u_xlat7.xx + vec2(1.0, -1.0);
    u_xlat21 = float(1.0) / u_xlat4.x;
    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat21);
    u_xlat21 = (-_Metallic) * 0.959999979 + 0.959999979;
    u_xlat22 = (-u_xlat21) + _Glossiness;
    u_xlat22 = u_xlat22 + 1.0;
    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
    u_xlat10_5 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat4.xzw = u_xlat10_5.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);
    u_xlat4.xzw = vec3(_Metallic) * u_xlat4.xzw + vec3(0.0399999991, 0.0399999991, 0.0399999991);
    u_xlat6.xyz = vec3(u_xlat22) + (-u_xlat4.xzw);
    u_xlat6.xyz = u_xlat7.yyy * u_xlat6.xyz + u_xlat4.xzw;
    u_xlat1.xyz = u_xlat1.xyz * u_xlat6.xyz;
    u_xlat10_6 = texture(unity_LightmapInd, vs_TEXCOORD1.xy);
    u_xlat16_6.xyz = u_xlat10_6.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat16_14 = max(u_xlat10_6.w, 9.99999975e-05);
    u_xlat22 = dot(u_xlat3.xyz, u_xlat16_6.xyz);
    u_xlat22 = u_xlat22 + 0.5;
    u_xlat10_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
    u_xlat6.xyz = vec3(u_xlat22) * u_xlat10_6.xyz;
    u_xlat6.xyz = u_xlat6.xyz / vec3(u_xlat16_14);
    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;
    SV_Target0.w = u_xlat10_5.w * _Color.w;
    u_xlat5.xyz = vec3(u_xlat21) * u_xlat5.xyz;
    u_xlat1.xyz = u_xlat6.xyz * u_xlat5.xyz + u_xlat1.xyz;
    u_xlat14.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat14.x = max(u_xlat14.x, 1.17549435e-38);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat2.xyz = u_xlat14.xxx * u_xlat2.xyz;
    u_xlat14.x = dot(u_xlat3.xyz, u_xlat2.xyz);
    u_xlat14.x = clamp(u_xlat14.x, 0.0, 1.0);
    u_xlat14.y = dot(_MainLightPosition.xyz, u_xlat2.xyz);
    u_xlat14.y = clamp(u_xlat14.y, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * u_xlat14.xy;
    u_xlat21 = max(u_xlat14.y, 0.100000001);
    u_xlat22 = dot(u_xlat3.xyz, _MainLightPosition.xyz);
    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);
    u_xlat7.y = u_xlat14.x * u_xlat4.y + 1.00001001;
    u_xlat7.xy = u_xlat7.xy * u_xlat7.xy;
    u_xlat14.x = u_xlat21 * u_xlat7.y;
    u_xlat0.x = u_xlat0.x * u_xlat14.x;
    u_xlat0.x = u_xlat0.x * 4.0;
    u_xlat0.x = u_xlat7.x / u_xlat0.x;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xzw + u_xlat5.xyz;
    u_xlat2.xy = vs_TEXCOORD8.xy / vs_TEXCOORD8.ww;
    u_xlat10_21 = texture(_ScreenSpaceShadowMap, u_xlat2.xy).x;
    u_xlat2.x = (-_ShadowData.x) + 1.0;
    u_xlat21 = u_xlat10_21 * _ShadowData.x + u_xlat2.x;
    u_xlat21 = u_xlat22 * u_xlat21;
    u_xlat2.xyz = vec3(u_xlat21) * _MainLightColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    SV_Target0.xyz = vs_TEXCOORD7.yzw * u_xlat5.xyz + u_xlat0.xyz;
    return;
}
