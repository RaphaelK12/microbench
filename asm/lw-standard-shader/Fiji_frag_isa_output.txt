shader main
  asic(VI)
  type(PS)
                                                            // s_ps_state in s0

  s_mov_b64     s[48:49], exec                          // 000000000000: BEB0017E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE077E
  s_mov_b32     m0, s4                                  // 000000000008: BEFC0004
  s_mov_b32     s0, s1                                  // 00000000000C: BE800001
  s_movk_i32    s1, 0x0000                              // 000000000010: B0010000
  s_mov_b32     s4, s2                                  // 000000000014: BE840002
  s_movk_i32    s5, 0x0000                              // 000000000018: B0050000
  s_mov_b32     s2, s3                                  // 00000000001C: BE820003
  s_movk_i32    s3, 0x0000                              // 000000000020: B0030000
  v_interp_p1_f32  v2, v0, attr2.x                      // 000000000024: D4080800
  v_interp_p1_f32  v19, v0, attr3.x                     // 000000000028: D44C0C00
  v_interp_p2_f32  v2, v1, attr2.x                      // 00000000002C: D4090801
  v_interp_p1_f32  v4, v0, attr2.y                      // 000000000030: D4100900
  v_interp_p2_f32  v19, v1, attr3.x                     // 000000000034: D44D0C01
  v_interp_p1_f32  v20, v0, attr3.y                     // 000000000038: D4500D00
  v_interp_p2_f32  v4, v1, attr2.y                      // 00000000003C: D4110901
  v_interp_p1_f32  v5, v0, attr2.z                      // 000000000040: D4140A00
  v_interp_p2_f32  v20, v1, attr3.y                     // 000000000044: D4510D01
  v_interp_p1_f32  v21, v0, attr3.z                     // 000000000048: D4540E00
  v_mul_f32     v6, v19, v19                            // 00000000004C: 0A0C2713
  v_mul_f32     v7, v2, v2                              // 000000000050: 0A0E0502
  v_interp_p2_f32  v5, v1, attr2.z                      // 000000000054: D4150A01
  v_interp_p2_f32  v21, v1, attr3.z                     // 000000000058: D4550E01
  v_mac_f32     v6, v20, v20                            // 00000000005C: 2C0C2914
  v_mac_f32     v7, v4, v4                              // 000000000060: 2C0E0904
  v_mac_f32     v6, v21, v21                            // 000000000064: 2C0C2B15
  v_mac_f32     v7, v5, v5                              // 000000000068: 2C0E0B05
  s_load_dwordx4  s[8:11], s[2:3], 0x140                // 00000000006C: C00A0201 00000140
  v_rsq_f32     v22, v6                                 // 000000000074: 7E2C4906
  v_rsq_f32     v3, v7                                  // 000000000078: 7E064907
  v_mul_f32     v23, v19, v22                           // 00000000007C: 0A2E2D13
  v_mul_f32     v24, v2, v3                             // 000000000080: 0A300702
  s_waitcnt     lgkmcnt(0)                              // 000000000084: BF8C007F
  s_andn2_b32   s9, s9, 0x3fff0000                      // 000000000088: 8909FF09 3FFF0000
  v_mul_f32     v25, v20, v22                           // 000000000090: 0A322D14
  v_mul_f32     v26, v4, v3                             // 000000000094: 0A340704
  v_mul_f32     v2, v24, -v23                           // 000000000098: D1050002 40022F18
  v_mul_f32     v27, v21, v22                           // 0000000000A0: 0A362D15
  v_mul_f32     v28, v5, v3                             // 0000000000A4: 0A380705
  v_mad_f32     v2, v26, -v25, v2                       // 0000000000A8: D1C10002 440A331A
  s_buffer_load_dword  s2, s[8:11], 0x10                // 0000000000B0: C0220084 00000010
  v_mad_f32     v2, v28, -v27, v2 mul:2                 // 0000000000B8: D1C10002 4C0A371C
  v_mul_f32     v3, v24, -v2                            // 0000000000C0: D1050003 40020518
  v_mul_f32     v4, v26, -v2                            // 0000000000C8: D1050004 4002051A
  v_mul_f32     v2, v28, -v2                            // 0000000000D0: D1050002 4002051C
  v_mad_f32     v3, -v19, v22, v3                       // 0000000000D8: D1C10003 240E2D13
  v_mad_f32     v4, -v20, v22, v4                       // 0000000000E0: D1C10004 24122D14
  v_mad_f32     v2, -v21, v22, v2                       // 0000000000E8: D1C10002 240A2D15
  v_cubema_f32  v5, v3, v4, v2                          // 0000000000F0: D1C70005 040A0903
  s_load_dwordx8  s[12:19], s[0:1], 0x80                // 0000000000F8: C00E0300 00000080
  v_rcp_f32     v5, abs(v5)                             // 000000000100: D1620105 00000105
  s_load_dwordx4  s[20:23], s[4:5], 0x40                // 000000000108: C00A0502 00000040
  s_waitcnt     lgkmcnt(0)                              // 000000000110: BF8C007F
  v_subrev_f32  v29, s2, 1.0                            // 000000000114: D103001D 0001E402
  v_mov_b32     v6, 0x3fd9999a                          // 00000000011C: 7E0C02FF 3FD9999A
  s_mov_b32     s3, 0xbf333333                          // 000000000124: BE8300FF BF333333
  v_mac_f32     v6, s3, v29                             // 00000000012C: 2C0C3A03
  v_mul_f32     v6, v29, v6                             // 000000000130: 0A0C0D1D
  v_cubetc_f32  v7, v3, v4, v2                          // 000000000134: D1C60007 040A0903
  v_cubesc_f32  v8, v3, v4, v2                          // 00000000013C: D1C50008 040A0903
  v_mul_f32     v11, 0x40c00000, v6                     // 000000000144: 0A160CFF 40C00000
  v_cubeid_f32  v10, v3, v4, v2                         // 00000000014C: D1C4000A 040A0903
  v_madak_f32   v9, v7, v5, 0x3fc00000                  // 000000000154: 30120B07 3FC00000
  v_madak_f32   v8, v8, v5, 0x3fc00000                  // 00000000015C: 30100B08 3FC00000
  image_sample_l  v[2:5], v[8:11], s[12:19], s[20:23] dmask:0xf // 000000000164: F0900F00 00A30208
  s_load_dwordx8  s[12:19], s[0:1], 0x60                // 00000000016C: C00E0300 00000060
  s_load_dwordx8  s[20:27], s[4:5], 0x20                // 000000000174: C00E0502 00000020
  v_interp_p1_f32  v6, v0, attr1.x                      // 00000000017C: D4180400
  v_interp_p1_f32  v7, v0, attr1.y                      // 000000000180: D41C0500
  s_load_dwordx8  s[28:35], s[0:1], 0x00                // 000000000184: C00E0700 00000000
  v_interp_p2_f32  v6, v1, attr1.x                      // 00000000018C: D4190401
  v_interp_p2_f32  v7, v1, attr1.y                      // 000000000190: D41D0501
  v_interp_p1_f32  v12, v0, attr5.w                     // 000000000194: D4301700
  s_load_dwordx4  s[36:39], s[4:5], 0x00                // 000000000198: C00A0902 00000000
  s_load_dwordx8  s[40:47], s[0:1], 0x40                // 0000000001A0: C00E0A00 00000040
  v_interp_p2_f32  v12, v1, attr5.w                     // 0000000001A8: D4311701
  s_waitcnt     lgkmcnt(0)                              // 0000000001AC: BF8C007F
  image_sample  v[8:11], v[6:9], s[12:19], s[24:27] dmask:0xf // 0000000001B0: F0800F00 00C30806
  s_load_dwordx8  s[12:19], s[0:1], 0x20                // 0000000001B8: C00E0300 00000020
  v_rcp_f32     v16, v12                                // 0000000001C0: 7E20450C
  s_load_dwordx4  s[4:7], s[4:5], 0x10                  // 0000000001C4: C00A0102 00000010
  v_interp_p1_f32  v12, v0, attr0.x                     // 0000000001CC: D4300000
  v_interp_p1_f32  v13, v0, attr0.y                     // 0000000001D0: D4340100
  v_interp_p2_f32  v12, v1, attr0.x                     // 0000000001D4: D4310001
  v_interp_p2_f32  v13, v1, attr0.y                     // 0000000001D8: D4350101
  v_interp_p1_f32  v17, v0, attr5.x                     // 0000000001DC: D4441400
  v_interp_p1_f32  v18, v0, attr5.y                     // 0000000001E0: D4481500
  v_interp_p2_f32  v17, v1, attr5.x                     // 0000000001E4: D4451401
  v_interp_p2_f32  v18, v1, attr5.y                     // 0000000001E8: D4491501
  image_sample  v[12:15], v[12:15], s[28:35], s[36:39] dmask:0xf // 0000000001EC: F0800F00 01270C0C
  v_mul_f32     v30, v17, v16                           // 0000000001F4: 0A3C2111
  v_mul_f32     v31, v18, v16                           // 0000000001F8: 0A3E2112
  image_sample  v[16:18], v[6:9], s[40:47], s[20:23] dmask:0x7 // 0000000001FC: F0800700 00AA1006
  s_nop         0x0000                                  // 000000000204: BF800000
  s_waitcnt     lgkmcnt(0)                              // 000000000208: BF8C007F
  image_sample  v6, v[30:33], s[12:19], s[4:7]          // 00000000020C: F0800100 0023061E
  s_buffer_load_dwordx4  s[4:7], s[8:11], 0x30          // 000000000214: C02A0104 00000030
  s_waitcnt     lgkmcnt(0)                              // 00000000021C: BF8C007F
  v_mad_f32     v7, v19, v22, s4                        // 000000000220: D1C10007 00122D13
  v_mad_f32     v19, v20, v22, s5                       // 000000000228: D1C10013 00162D14
  v_mul_f32     v20, v7, v7                             // 000000000230: 0A280F07
  v_mad_f32     v21, v21, v22, s6                       // 000000000234: D1C10015 001A2D15
  v_mac_f32     v20, v19, v19                           // 00000000023C: 2C282713
  v_mac_f32     v20, v21, v21                           // 000000000240: 2C282B15
  v_max_f32     v20, 0x00800000, v20                    // 000000000244: 162828FF 00800000
  s_buffer_load_dwordx4  s[12:15], s[8:11], 0x60        // 00000000024C: C02A0304 00000060
  v_rsq_f32     v20, v20                                // 000000000254: 7E284914
  s_waitcnt     vmcnt(4)                                // 000000000258: BF8C0F74
  v_add_f32     v5, -1.0, v5                            // 00000000025C: 020A0AF3
  v_mul_f32     v7, v7, v20                             // 000000000260: 0A0E2907
  s_waitcnt     lgkmcnt(0)                              // 000000000264: BF8C007F
  v_mad_f32     v5, v5, s15, 1.0                        // 000000000268: D1C10005 03C81F05
  v_mul_f32     v19, v19, v20                           // 000000000270: 0A262913
  v_mul_f32     v22, v24, v7                            // 000000000274: 0A2C0F18
  v_max_f32     v5, 0, v5                               // 000000000278: 160A0A80
  v_mul_f32     v20, v21, v20                           // 00000000027C: 0A282915
  v_mac_f32     v22, v19, v26                           // 000000000280: 2C2C3513
  v_mul_f32     v7, s4, v7                              // 000000000284: 0A0E0E04
  v_log_f32     v5, v5                                  // 000000000288: 7E0A4305
  v_mul_f32     v21, v29, v29                           // 00000000028C: 0A2A3B1D
  v_mad_f32     v22, v20, v28, v22 clamp                // 000000000290: D1C18016 045A3914
  v_mac_f32     v7, s5, v19                             // 000000000298: 2C0E2605
  v_mad_f32     v19, v21, v21, -1.0                     // 00000000029C: D1C10013 03CE2B15
  v_mad_f32     v7, v20, s6, v7 clamp                   // 0000000002A4: D1C18007 041C0D14
  v_mul_f32     v20, v22, v22                           // 0000000002AC: 0A282D16
  s_buffer_load_dword  s0, s[8:11], 0x40                // 0000000002B0: C0220004 00000040
  v_mul_f32     v7, v7, v7                              // 0000000002B8: 0A0E0F07
  v_madak_f32   v19, v19, v20, 0x3f800054               // 0000000002BC: 30262913 3F800054
  s_buffer_load_dwordx4  s[16:19], s[8:11], 0x00        // 0000000002C4: C02A0404 00000000
  v_max_f32     v7, 0x3dcccccd, v7                      // 0000000002CC: 160E0EFF 3DCCCCCD
  v_mul_f32     v19, v19, v19                           // 0000000002D4: 0A262713
  s_buffer_load_dword  s1, s[8:11], 0x50                // 0000000002D8: C0220044 00000050
  v_mul_f32     v5, s13, v5                             // 0000000002E0: 0A0A0A0D
  v_mad_f32     v20, v29, v29, 0.5                      // 0000000002E4: D1C10014 03C23B1D
  s_waitcnt     vmcnt(3)                                // 0000000002EC: BF8C0F73
  v_add_f32     v8, -0.5, v8                            // 0000000002F0: 021010F1
  v_mul_f32     v7, v7, v19                             // 0000000002F4: 0A0E2707
  v_mul_f32     v19, v23, v24                           // 0000000002F8: 0A263117
  v_exp_f32     v5, v5                                  // 0000000002FC: 7E0A4105
  v_add_f32     v9, -0.5, v9                            // 000000000300: 021212F1
  v_max_f32     v11, 0x38d1b717, v11                    // 000000000304: 161616FF 38D1B717
  v_mul_f32     v8, v24, v8                             // 00000000030C: 0A101118
  v_mul_f32     v7, v20, v7 mul:4                       // 000000000310: D1050007 10020F14
  v_mac_f32     v19, v25, v26                           // 000000000318: 2C263519
  v_mad_f32     v20, v21, v21, 1.0                      // 00000000031C: D1C10014 03CA2B15
  v_mov_b32     v22, 0x3f75c28f                         // 000000000324: 7E2C02FF 3F75C28F
  v_mov_b32     v23, 0xbf75c28f                         // 00000000032C: 7E2E02FF BF75C28F
  v_add_f32     v10, -0.5, v10                          // 000000000334: 021414F1
  v_mac_f32     v8, v9, v26                             // 000000000338: 2C103509
  v_rcp_f32     v9, v11                                 // 00000000033C: 7E12450B
  v_rcp_f32     v7, v7                                  // 000000000340: 7E0E4507
  s_buffer_load_dwordx4  s[8:11], s[8:11], 0x20         // 000000000344: C02A0204 00000020
  v_mad_f32     v19, v27, v28, v19 clamp                // 00000000034C: D1C18013 044E391B
  v_rcp_f32     v11, v20                                // 000000000354: 7E164514
  s_waitcnt     lgkmcnt(0)                              // 000000000358: BF8C007F
  v_mac_f32     v22, s0, v23                            // 00000000035C: 2C2C2E00
  v_mov_b32     v20, 0xbd23d70a                         // 000000000360: 7E2802FF BD23D70A
  v_mac_f32     v8, v10, v28                            // 000000000368: 2C10390A
  v_sub_f32     v10, 1.0, v19                           // 00000000036C: 041426F2
  v_sub_f32     v19, s2, v22                            // 000000000370: 04262C02
  s_waitcnt     vmcnt(2)                                // 000000000374: BF8C0F72
  v_mad_f32     v23, v12, s16, v20                      // 000000000378: D1C10017 0450210C
  v_mad_f32     v25, v13, s17, v20                      // 000000000380: D1C10019 0450230D
  v_mac_f32     v20, s18, v14                           // 000000000388: 2C281C12
  v_mov_b32     v27, 0x3d23d70a                         // 00000000038C: 7E3602FF 3D23D70A
  v_add_f32     v8, 0.5, v8                             // 000000000394: 021010F0
  v_mul_f32     v24, s4, v24                            // 000000000398: 0A303004
  v_mul_f32     v10, v10, v10                           // 00000000039C: 0A14150A
  v_mul_f32     v5, s12, v5                             // 0000000003A0: 0A0A0A0C
  v_mul_f32     v21, v21, v21                           // 0000000003A4: 0A2A2B15
  v_add_f32     v19, v19, 1.0 clamp                     // 0000000003A8: D1018013 0001E513
  v_mul_f32     v12, s16, v12                           // 0000000003B0: 0A181810
  v_mul_f32     v13, s17, v13                           // 0000000003B4: 0A1A1A11
  v_mul_f32     v14, s18, v14                           // 0000000003B8: 0A1C1C12
  v_mad_f32     v23, s0, v23, v27                       // 0000000003BC: D1C10017 046E2E00
  v_mad_f32     v25, s0, v25, v27                       // 0000000003C4: D1C10019 046E3200
  v_mac_f32     v27, s0, v20                            // 0000000003CC: 2C362800
  s_waitcnt     vmcnt(1)                                // 0000000003D0: BF8C0F71
  v_mul_f32     v16, v8, v16                            // 0000000003D4: 0A202108
  v_mul_f32     v17, v8, v17                            // 0000000003D8: 0A222308
  v_mul_f32     v8, v8, v18                             // 0000000003DC: 0A102508
  v_mac_f32     v24, s5, v26                            // 0000000003E0: 2C303405
  v_subrev_f32  v18, s1, 1.0                            // 0000000003E4: D1030012 0001E401
  v_mul_f32     v2, v2, v5                              // 0000000003EC: 0A040B02
  v_mul_f32     v3, v3, v5                              // 0000000003F0: 0A060B03
  v_mul_f32     v4, v4, v5                              // 0000000003F4: 0A080B04
  v_mul_f32     v5, v10, v10                            // 0000000003F8: 0A0A150A
  v_sub_f32     v10, v19, v23                           // 0000000003FC: 04142F13
  v_sub_f32     v20, v19, v25                           // 000000000400: 04283313
  v_sub_f32     v19, v19, v27                           // 000000000404: 04263713
  v_mul_f32     v16, v16, v9                            // 000000000408: 0A201310
  v_mul_f32     v17, v17, v9                            // 00000000040C: 0A221311
  v_mul_f32     v8, v8, v9                              // 000000000410: 0A101308
  v_mul_f32     v9, v22, v12                            // 000000000414: 0A121916
  v_mul_f32     v26, v22, v13                           // 000000000418: 0A341B16
  v_mul_f32     v29, v22, v14                           // 00000000041C: 0A3A1D16
  v_mad_f32     v24, s6, v28, v24 clamp                 // 000000000420: D1C18018 04623806
  v_mul_f32     v7, v21, v7                             // 000000000428: 0A0E0F15
  s_waitcnt     vmcnt(0)                                // 00000000042C: BF8C0F70
  v_mac_f32     v18, s1, v6                             // 000000000430: 2C240C01
  v_mul_f32     v2, v2, v11                             // 000000000434: 0A041702
  v_mul_f32     v3, v3, v11                             // 000000000438: 0A061703
  v_mul_f32     v4, v4, v11                             // 00000000043C: 0A081704
  v_mad_f32     v6, v5, v10, v23                        // 000000000440: D1C10006 045E1505
  v_mad_f32     v10, v5, v20, v25                       // 000000000448: D1C1000A 04662905
  v_mad_f32     v5, v5, v19, v27                        // 000000000450: D1C10005 046E2705
  v_mul_f32     v11, v16, v9                            // 000000000458: 0A161310
  v_mul_f32     v16, v17, v26                           // 00000000045C: 0A203511
  v_mul_f32     v8, v8, v29                             // 000000000460: 0A103B08
  v_mul_f32     v17, v23, v7                            // 000000000464: 0A220F17
  v_mul_f32     v19, v25, v7                            // 000000000468: 0A260F19
  v_mul_f32     v7, v27, v7                             // 00000000046C: 0A0E0F1B
  v_mul_f32     v18, v24, v18                           // 000000000470: 0A242518
  v_mac_f32     v11, v2, v6                             // 000000000474: 2C160D02
  v_mac_f32     v16, v3, v10                            // 000000000478: 2C201503
  v_mac_f32     v8, v4, v5                              // 00000000047C: 2C100B04
  v_mac_f32     v17, v22, v12                           // 000000000480: 2C221916
  v_mac_f32     v19, v22, v13                           // 000000000484: 2C261B16
  v_mac_f32     v7, v22, v14                            // 000000000488: 2C0E1D16
  v_mul_f32     v2, s8, v18                             // 00000000048C: 0A042408
  v_mul_f32     v3, s9, v18                             // 000000000490: 0A062409
  v_mul_f32     v4, s10, v18                            // 000000000494: 0A08240A
  v_interp_p1_f32  v5, v0, attr4.y                      // 000000000498: D4141100
  v_interp_p1_f32  v6, v0, attr4.z                      // 00000000049C: D4181200
  v_interp_p1_f32  v0, v0, attr4.w                      // 0000000004A0: D4001300
  v_mac_f32     v11, v17, v2                            // 0000000004A4: 2C160511
  v_mac_f32     v16, v19, v3                            // 0000000004A8: 2C200713
  v_mac_f32     v8, v7, v4                              // 0000000004AC: 2C100907
  v_interp_p2_f32  v5, v1, attr4.y                      // 0000000004B0: D4151101
  v_interp_p2_f32  v6, v1, attr4.z                      // 0000000004B4: D4191201
  v_interp_p2_f32  v0, v1, attr4.w                      // 0000000004B8: D4011301
  v_mul_f32     v1, s19, v15                            // 0000000004BC: 0A021E13
  v_mac_f32     v11, v9, v5                             // 0000000004C0: 2C160B09
  v_mac_f32     v16, v26, v6                            // 0000000004C4: 2C200D1A
  v_mac_f32     v8, v29, v0                             // 0000000004C8: 2C10011D
  s_mov_b64     exec, s[48:49]                          // 0000000004CC: BEFE0130
  v_cvt_pkrtz_f16_f32  v0, v11, v16                     // 0000000004D0: D2960000 0002210B
  v_cvt_pkrtz_f16_f32  v1, v8, v1                       // 0000000004D8: D2960001 00020308
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 0000000004E0: C4001C0F 00000100
  s_endpgm                                              // 0000000004E8: BF810000
end
