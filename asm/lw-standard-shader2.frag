#version 420
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_shading_language_420pack : require

uniform     vec4 _MainLightPosition;
uniform     vec4 _MainLightColor;
uniform     vec4 _MainLightDistanceAttenuation;
uniform     vec4 _MainLightSpotDir;
uniform     vec4 _MainLightSpotAttenuation;
uniform     vec4 _AdditionalLightPosition[16];
uniform     vec4 _AdditionalLightColor[16];
uniform     vec4 _AdditionalLightDistanceAttenuation[16];
uniform     vec4 _AdditionalLightSpotDir[16];
uniform     vec4 _AdditionalLightSpotAttenuation[16];
uniform     vec4 unity_SpecCube0_HDR;
uniform     vec4 unity_4LightIndices0;
uniform     vec4 _Color;
uniform     float _Glossiness;
uniform     float _Metallic;
uniform     vec4 _ShadowData;
uniform  samplerCube unity_SpecCube0;
uniform  sampler2D unity_Lightmap;
uniform  sampler2D unity_LightmapInd;
uniform  sampler2D _MainTex;
uniform  sampler2D _ScreenSpaceShadowMap;
in  vec2 vs_TEXCOORD0;
in  vec4 vs_TEXCOORD1;
in  vec3 vs_TEXCOORD2;
in  vec3 vs_TEXCOORD3;
in  vec3 vs_TEXCOORD6;
in  vec4 vs_TEXCOORD7;
in  vec4 vs_TEXCOORD8;
layout(location = 0) out vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat10_3;
vec4 u_xlat4;
vec4 u_xlat10_4;
ivec3 u_xlati4;
vec3 u_xlat5;
vec3 u_xlat6;
vec3 u_xlat16_6;
vec4 u_xlat10_6;
vec3 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
float u_xlat16_9;
float u_xlat10;
float u_xlat18;
float u_xlat21;
float u_xlat28;
float u_xlat29;
float u_xlat16_29;
float u_xlat10_29;
float u_xlat31;
float u_xlat32;
void main()
{
    u_xlat0.x = (-_Glossiness) + 1.0;
    u_xlat9.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;
    u_xlat9.x = u_xlat9.x * u_xlat0.x;
    u_xlat9.x = u_xlat9.x * 6.0;
    u_xlat18 = dot(vs_TEXCOORD6.xyz, vs_TEXCOORD6.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD6.xyz;
    u_xlat18 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    u_xlat2.xyz = vec3(u_xlat18) * vs_TEXCOORD3.xyz;
    u_xlat18 = dot((-u_xlat1.xyz), u_xlat2.xyz);
    u_xlat18 = u_xlat18 + u_xlat18;
    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat18)) + (-u_xlat1.xyz);
    u_xlat10_3 = textureLod(unity_SpecCube0, u_xlat3.xyz, u_xlat9.x);
    u_xlat16_9 = u_xlat10_3.w + -1.0;
    u_xlat9.x = unity_SpecCube0_HDR.w * u_xlat16_9 + 1.0;
    u_xlat9.x = max(u_xlat9.x, 0.0);
    u_xlat9.x = log2(u_xlat9.x);
    u_xlat9.x = u_xlat9.x * unity_SpecCube0_HDR.y;
    u_xlat9.x = exp2(u_xlat9.x);
    u_xlat9.x = u_xlat9.x * unity_SpecCube0_HDR.x;
    u_xlat9.xyz = u_xlat10_3.xyz * u_xlat9.xxx;
    u_xlat28 = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 0.5;
    u_xlat3.xy = vec2(u_xlat28) * vec2(u_xlat28) + vec2(1.0, -1.0);
    u_xlat28 = u_xlat28 * u_xlat28;
    u_xlat29 = float(1.0) / u_xlat3.x;
    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat29);
    u_xlat29 = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat29 = (-u_xlat29) + 1.0;
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat3.x = (-_Metallic) * 0.959999979 + 0.959999979;
    u_xlat21 = (-u_xlat3.x) + _Glossiness;
    u_xlat21 = u_xlat21 + 1.0;
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat10_4 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat5.xyz = u_xlat10_4.xyz * _Color.xyz + vec3(-0.0399999991, -0.0399999991, -0.0399999991);
    u_xlat5.xyz = vec3(_Metallic) * u_xlat5.xyz + vec3(0.0399999991, 0.0399999991, 0.0399999991);
    u_xlat6.xyz = vec3(u_xlat21) + (-u_xlat5.xyz);
    u_xlat6.xyz = vec3(u_xlat29) * u_xlat6.xyz + u_xlat5.xyz;
    u_xlat9.xyz = u_xlat9.xyz * u_xlat6.xyz;
    u_xlat10_6 = texture(unity_LightmapInd, vs_TEXCOORD1.xy);
    u_xlat16_29 = max(u_xlat10_6.w, 9.99999975e-05);
    u_xlat16_6.xyz = u_xlat10_6.xyz + vec3(-0.5, -0.5, -0.5);
    u_xlat21 = dot(u_xlat2.xyz, u_xlat16_6.xyz);
    u_xlat21 = u_xlat21 + 0.5;
    u_xlat10_6.xyz = texture(unity_Lightmap, vs_TEXCOORD1.xy).xyz;
    u_xlat6.xyz = vec3(u_xlat21) * u_xlat10_6.xyz;
    u_xlat6.xyz = u_xlat6.xyz / vec3(u_xlat16_29);
    u_xlat4.xyz = u_xlat10_4.xyz * _Color.xyz;
    SV_Target0.w = u_xlat10_4.w * _Color.w;
    u_xlat3.xzw = u_xlat3.xxx * u_xlat4.xyz;
    u_xlat9.xyz = u_xlat6.xyz * u_xlat3.xzw + u_xlat9.xyz;
    u_xlat4.xy = vs_TEXCOORD8.xy / vs_TEXCOORD8.ww;
    u_xlat10_29 = texture(_ScreenSpaceShadowMap, u_xlat4.xy).x;
    u_xlat4.x = (-_ShadowData.x) + 1.0;
    u_xlat29 = u_xlat10_29 * _ShadowData.x + u_xlat4.x;
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) * _MainLightPosition.www + _MainLightPosition.xyz;
    u_xlat31 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat31 = max(u_xlat31, 1.17549435e-38);
    u_xlat32 = u_xlat31 * _MainLightDistanceAttenuation.x + 1.0;
    u_xlat32 = float(1.0) / u_xlat32;
    u_xlat6.x = u_xlat31 * _MainLightDistanceAttenuation.y + _MainLightDistanceAttenuation.z;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat31 = inversesqrt(u_xlat31);
    u_xlat32 = u_xlat32 * u_xlat6.x;
    u_xlat6.xyz = vec3(u_xlat31) * u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat31) + u_xlat1.xyz;
    u_xlat31 = dot(_MainLightSpotDir.xyz, u_xlat6.xyz);
    u_xlat31 = u_xlat31 * _MainLightSpotAttenuation.x + _MainLightSpotAttenuation.y;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat31 = u_xlat31 * u_xlat31;
    u_xlat31 = u_xlat31 * u_xlat32;
    u_xlat29 = u_xlat29 * u_xlat31;
    u_xlat31 = dot(u_xlat2.xyz, u_xlat6.xyz);
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat31;
    u_xlat7.xyz = vec3(u_xlat29) * _MainLightColor.xyz;
    u_xlat29 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat4.xyz = vec3(u_xlat29) * u_xlat4.xyz;
    u_xlat29 = dot(u_xlat6.xyz, u_xlat4.xyz);
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat4.x = dot(u_xlat2.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat4.x = u_xlat4.x * u_xlat3.y + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = max(u_xlat29, 0.100000001);
    u_xlat29 = u_xlat29 * u_xlat4.x;
    u_xlat29 = u_xlat0.x * u_xlat29;
    u_xlat29 = u_xlat29 * 4.0;
    u_xlat29 = u_xlat28 / u_xlat29;
    u_xlat4.xyz = vec3(u_xlat29) * u_xlat5.xyz + u_xlat3.xzw;
    u_xlat9.xyz = u_xlat4.xyz * u_xlat7.xyz + u_xlat9.xyz;
    u_xlati4.xyz = ivec3(unity_4LightIndices0.xyz);
    u_xlat6.xyz = (-vs_TEXCOORD2.xyz) * _AdditionalLightPosition[u_xlati4.x].www + _AdditionalLightPosition[u_xlati4.x].xyz;
    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat31 = u_xlat29 * _AdditionalLightDistanceAttenuation[u_xlati4.x].x + 1.0;
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat32 = u_xlat29 * _AdditionalLightDistanceAttenuation[u_xlati4.x].y + _AdditionalLightDistanceAttenuation[u_xlati4.x].z;
    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat31 = u_xlat31 * u_xlat32;
    u_xlat7.xyz = vec3(u_xlat29) * u_xlat6.xyz;
    u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat29) + u_xlat1.xyz;
    u_xlat29 = dot(_AdditionalLightSpotDir[u_xlati4.x].xyz, u_xlat7.xyz);
    u_xlat29 = u_xlat29 * _AdditionalLightSpotAttenuation[u_xlati4.x].x + _AdditionalLightSpotAttenuation[u_xlati4.x].y;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = u_xlat29 * u_xlat31;
    u_xlat31 = dot(u_xlat2.xyz, u_xlat7.xyz);
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat31;
    u_xlat8.xyz = vec3(u_xlat29) * _AdditionalLightColor[u_xlati4.x].xyz;
    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat6.xyz = vec3(u_xlat29) * u_xlat6.xyz;
    u_xlat29 = dot(u_xlat7.xyz, u_xlat6.xyz);
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat4.x = dot(u_xlat2.xyz, u_xlat6.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat4.x = u_xlat4.x * u_xlat3.y + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = max(u_xlat29, 0.100000001);
    u_xlat29 = u_xlat29 * u_xlat4.x;
    u_xlat29 = u_xlat0.x * u_xlat29;
    u_xlat29 = u_xlat29 * 4.0;
    u_xlat29 = u_xlat28 / u_xlat29;
    u_xlat6.xyz = vec3(u_xlat29) * u_xlat5.xyz + u_xlat3.xzw;
    u_xlat9.xyz = u_xlat6.xyz * u_xlat8.xyz + u_xlat9.xyz;
    u_xlat6.xyz = (-vs_TEXCOORD2.xyz) * _AdditionalLightPosition[u_xlati4.y].www + _AdditionalLightPosition[u_xlati4.y].xyz;
    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat4.x = u_xlat29 * _AdditionalLightDistanceAttenuation[u_xlati4.y].x + 1.0;
    u_xlat4.x = float(1.0) / u_xlat4.x;
    u_xlat31 = u_xlat29 * _AdditionalLightDistanceAttenuation[u_xlati4.y].y + _AdditionalLightDistanceAttenuation[u_xlati4.y].z;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat4.x = u_xlat31 * u_xlat4.x;
    u_xlat7.xyz = vec3(u_xlat29) * u_xlat6.xyz;
    u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat29) + u_xlat1.xyz;
    u_xlat29 = dot(_AdditionalLightSpotDir[u_xlati4.y].xyz, u_xlat7.xyz);
    u_xlat29 = u_xlat29 * _AdditionalLightSpotAttenuation[u_xlati4.y].x + _AdditionalLightSpotAttenuation[u_xlati4.y].y;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = u_xlat29 * u_xlat4.x;
    u_xlat4.x = dot(u_xlat2.xyz, u_xlat7.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat4.x;
    u_xlat4.xyw = vec3(u_xlat29) * _AdditionalLightColor[u_xlati4.y].xyz;
    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat6.xyz = vec3(u_xlat29) * u_xlat6.xyz;
    u_xlat29 = dot(u_xlat2.xyz, u_xlat6.xyz);
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat32 = dot(u_xlat7.xyz, u_xlat6.xyz);
    u_xlat32 = clamp(u_xlat32, 0.0, 1.0);
    u_xlat32 = u_xlat32 * u_xlat32;
    u_xlat32 = max(u_xlat32, 0.100000001);
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = u_xlat29 * u_xlat3.y + 1.00001001;
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = u_xlat32 * u_xlat29;
    u_xlat29 = u_xlat0.x * u_xlat29;
    u_xlat29 = u_xlat29 * 4.0;
    u_xlat29 = u_xlat28 / u_xlat29;
    u_xlat6.xyz = vec3(u_xlat29) * u_xlat5.xyz + u_xlat3.xzw;
    u_xlat9.xyz = u_xlat6.xyz * u_xlat4.xyw + u_xlat9.xyz;
    u_xlat4.xyw = (-vs_TEXCOORD2.xyz) * _AdditionalLightPosition[u_xlati4.z].www + _AdditionalLightPosition[u_xlati4.z].xyz;
    u_xlat29 = dot(u_xlat4.xyw, u_xlat4.xyw);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat32 = u_xlat29 * _AdditionalLightDistanceAttenuation[u_xlati4.z].x + 1.0;
    u_xlat32 = float(1.0) / u_xlat32;
    u_xlat6.x = u_xlat29 * _AdditionalLightDistanceAttenuation[u_xlati4.z].y + _AdditionalLightDistanceAttenuation[u_xlati4.z].z;
    u_xlat6.x = clamp(u_xlat6.x, 0.0, 1.0);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat32 = u_xlat32 * u_xlat6.x;
    u_xlat6.xyz = vec3(u_xlat29) * u_xlat4.xyw;
    u_xlat1.xyz = u_xlat4.xyw * vec3(u_xlat29) + u_xlat1.xyz;
    u_xlat29 = dot(_AdditionalLightSpotDir[u_xlati4.z].xyz, u_xlat6.xyz);
    u_xlat29 = u_xlat29 * _AdditionalLightSpotAttenuation[u_xlati4.z].x + _AdditionalLightSpotAttenuation[u_xlati4.z].y;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat29;
    u_xlat29 = u_xlat29 * u_xlat32;
    u_xlat4.x = dot(u_xlat2.xyz, u_xlat6.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat29 = u_xlat29 * u_xlat4.x;
    u_xlat4.xyz = vec3(u_xlat29) * _AdditionalLightColor[u_xlati4.z].xyz;
    u_xlat29 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat29 = max(u_xlat29, 1.17549435e-38);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat1.xyz = u_xlat1.xyz * vec3(u_xlat29);
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat6.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat1.x = max(u_xlat1.x, 0.100000001);
    u_xlat10 = u_xlat2.x * u_xlat2.x;
    u_xlat10 = u_xlat10 * u_xlat3.y + 1.00001001;
    u_xlat10 = u_xlat10 * u_xlat10;
    u_xlat1.x = u_xlat1.x * u_xlat10;
    u_xlat0.x = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * 4.0;
    u_xlat0.x = u_xlat28 / u_xlat0.x;
    u_xlat1.xyz = u_xlat0.xxx * u_xlat5.xyz + u_xlat3.xzw;
    u_xlat0.xyz = u_xlat1.xyz * u_xlat4.xyz + u_xlat9.xyz;
    SV_Target0.xyz = vs_TEXCOORD7.yzw * u_xlat3.xzw + u_xlat0.xyz;
    return;
}
