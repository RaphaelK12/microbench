shader main
  asic(SI)
  type(VS)

  s_swappc_b64  s[2:3], s[2:3]                              // 00000000: BE822102
  s_movk_i32    s0, 0x05b0                                  // 00000004: B00005B0
  s_buffer_load_dwordx4  s[0:3], s[8:11], s0                // 00000008: C2800800
  s_waitcnt     lgkmcnt(0)                                  // 0000000C: BF8C007F
  s_movk_i32    s3, 0x05c0                                  // 00000010: B00305C0
  s_buffer_load_dwordx4  s[4:7], s[8:11], s3                // 00000014: C2820803
  s_movk_i32    s3, 0x05d0                                  // 00000018: B00305D0
  s_buffer_load_dwordx4  s[20:23], s[8:11], s3              // 0000001C: C28A0803
  s_movk_i32    s3, 0x0570                                  // 00000020: B0030570
  s_buffer_load_dwordx4  s[24:27], s[8:11], s3              // 00000024: C28C0803
  s_movk_i32    s3, 0x0580                                  // 00000028: B0030580
  s_buffer_load_dwordx4  s[28:31], s[8:11], s3              // 0000002C: C28E0803
  s_movk_i32    s3, 0x0590                                  // 00000030: B0030590
  s_buffer_load_dwordx4  s[32:35], s[8:11], s3              // 00000034: C2900803
  s_movk_i32    s3, 0x05a0                                  // 00000038: B00305A0
  s_waitcnt     lgkmcnt(0)                                  // 0000003C: BF8C007F
  s_movk_i32    s7, 0x0520                                  // 00000040: B0070520
  s_movk_i32    s13, 0x0620                                 // 00000044: B00D0620
  s_movk_i32    s14, 0x0530                                 // 00000048: B00E0530
  v_mul_f32     v0, s0, v4                                  // 0000004C: 10000800
  s_buffer_load_dwordx4  s[36:39], s[8:11], s3              // 00000050: C2920803
  v_mac_f32     v0, s1, v5                                  // 00000054: 3E000A01
  v_mul_f32     v1, s4, v4                                  // 00000058: 10020804
  s_buffer_load_dwordx4  s[40:43], s[8:11], s7              // 0000005C: C2940807
  v_mac_f32     v0, s2, v6                                  // 00000060: 3E000C02
  v_mac_f32     v1, s5, v5                                  // 00000064: 3E020A05
  v_mul_f32     v2, s20, v4                                 // 00000068: 10040814
  v_mul_f32     v3, s24, v8                                 // 0000006C: 10061018
  v_mac_f32     v1, s6, v6                                  // 00000070: 3E020C06
  v_mac_f32     v2, s21, v5                                 // 00000074: 3E040A15
  v_mul_f32     v4, v0, v0                                  // 00000078: 10080100
  v_mul_f32     v5, s25, v8                                 // 0000007C: 100A1019
  v_mac_f32     v3, s28, v9                                 // 00000080: 3E06121C
  v_mac_f32     v2, s22, v6                                 // 00000084: 3E040C16
  v_mac_f32     v4, v1, v1                                  // 00000088: 3E080301
  v_mul_f32     v6, s26, v8                                 // 0000008C: 100C101A
  v_mac_f32     v5, s29, v9                                 // 00000090: 3E0A121D
  v_mac_f32     v3, s32, v10                                // 00000094: 3E061420
  v_mac_f32     v4, v2, v2                                  // 00000098: 3E080502
  s_buffer_load_dwordx8  s[0:7], s[8:11], s13               // 0000009C: C2C0080D
  v_mac_f32     v6, s30, v9                                 // 000000A0: 3E0C121E
  v_mac_f32     v5, s33, v10                                // 000000A4: 3E0A1421
  s_movk_i32    s13, 0x0640                                 // 000000A8: B00D0640
  s_movk_i32    s15, 0x0550                                 // 000000AC: B00F0550
  s_movk_i32    s20, 0x0614                                 // 000000B0: B0140614
  s_waitcnt     lgkmcnt(0)                                  // 000000B4: BF8C007F
  v_add_f32     v3, s36, v3                                 // 000000B8: 06060624
  v_rsq_f32     v4, v4                                      // 000000BC: 7E085D04
  s_buffer_load_dwordx8  s[24:31], s[8:11], s14             // 000000C0: C2CC080E
  s_buffer_load_dwordx4  s[44:47], s[8:11], s13             // 000000C4: C296080D
  v_mac_f32     v6, s34, v10                                // 000000C8: 3E0C1422
  v_add_f32     v5, s37, v5                                 // 000000CC: 060A0A25
  v_sub_f32     v7, s40, v3                                 // 000000D0: 080E0628
  v_add_f32     v6, s38, v6                                 // 000000D4: 060C0C26
  v_sub_f32     v8, s41, v5                                 // 000000D8: 08100A29
  v_mul_f32     v9, v7, v7                                  // 000000DC: 10120F07
  s_buffer_load_dwordx8  s[32:39], s[8:11], s15             // 000000E0: C2D0080F
  s_buffer_load_dword  s13, s[8:11], s20                    // 000000E4: C2068814
  s_movk_i32    s14, 0x0510                                 // 000000E8: B00E0510
  v_sub_f32     v10, s42, v6                                // 000000EC: 08140C2A
  v_mac_f32     v9, v8, v8                                  // 000000F0: 3E121108
  s_buffer_load_dwordx4  s[20:23], s[8:11], s14             // 000000F4: C28A080E
  s_buffer_load_dwordx2  s[14:15], s[8:11], 0x40            // 000000F8: C2470940
  v_mac_f32     v9, v10, v10                                // 000000FC: 3E12150A
  v_mul_f32     v0, v0, v4                                  // 00000100: 10000900
  v_mul_f32     v1, v1, v4                                  // 00000104: 10020901
  s_movk_i32    s40, 0x0650                                 // 00000108: B0280650
  s_buffer_load_dwordx4  s[40:43], s[8:11], s40             // 0000010C: C2940828
  v_max_f32     v9, 0x00800000, v9                          // 00000110: 201212FF 00800000
  v_mul_f32     v2, v2, v4                                  // 00000118: 10040902
  v_mul_f32     v4, v0, v1                                  // 0000011C: 10080300
  v_rsq_f32     v9, v9                                      // 00000120: 7E125D09
  v_mul_f32     v15, v1, v2                                 // 00000124: 101E0501
  s_waitcnt     lgkmcnt(0)                                  // 00000128: BF8C007F
  v_mul_f32     v16, s44, v4                                // 0000012C: 1020082C
  v_mul_f32     v17, s4, v4                                 // 00000130: 10220804
  v_mul_f32     v4, s0, v4                                  // 00000134: 10080800
  v_mul_f32     v18, s24, v3                                // 00000138: 10240618
  v_mul_f32     v19, s25, v3                                // 0000013C: 10260619
  v_mul_f32     v20, s26, v3                                // 00000140: 1028061A
  v_mul_f32     v21, s27, v3                                // 00000144: 102A061B
  v_mul_f32     v22, v2, v2                                 // 00000148: 102C0502
  v_mac_f32     v16, s45, v15                               // 0000014C: 3E201E2D
  v_mac_f32     v17, s5, v15                                // 00000150: 3E221E05
  v_mac_f32     v4, s1, v15                                 // 00000154: 3E081E01
  v_mac_f32     v18, s28, v5                                // 00000158: 3E240A1C
  v_mac_f32     v19, s29, v5                                // 0000015C: 3E260A1D
  v_mac_f32     v20, s30, v5                                // 00000160: 3E280A1E
  v_mac_f32     v21, s31, v5                                // 00000164: 3E2A0A1F
  v_mul_f32     v15, v2, v0                                 // 00000168: 101E0102
  v_mac_f32     v16, s46, v22                               // 0000016C: 3E202C2E
  v_mac_f32     v17, s6, v22                                // 00000170: 3E222C06
  v_mac_f32     v4, s2, v22                                 // 00000174: 3E082C02
  v_mul_f32     v22, v0, v0                                 // 00000178: 102C0100
  v_mov_b32     v23, s13                                    // 0000017C: 7E2E020D
  v_mov_b32     v24, s22                                    // 00000180: 7E300216
  v_mov_b32     v25, s23                                    // 00000184: 7E320217
  v_mac_f32     v18, s32, v6                                // 00000188: 3E240C20
  v_mac_f32     v19, s33, v6                                // 0000018C: 3E260C21
  v_mac_f32     v20, s34, v6                                // 00000190: 3E280C22
  v_mac_f32     v21, s35, v6                                // 00000194: 3E2A0C23
  v_mac_f32     v16, s47, v15                               // 00000198: 3E201E2F
  v_mac_f32     v17, s7, v15                                // 0000019C: 3E221E07
  v_mac_f32     v4, s3, v15                                 // 000001A0: 3E081E03
  v_mad_f32     v22, -v1, v1, v22                           // 000001A4: D2820016 245A0301
  v_cvt_i32_f32  v15, s14                                   // 000001AC: 7E1E100E
  v_min_f32     v23, s15, v23                               // 000001B0: 1E2E2E0F
  s_movk_i32    s0, 0x05e0                                  // 000001B4: B00005E0
  s_movk_i32    s1, 0x05f0                                  // 000001B8: B00105F0
  s_buffer_load_dwordx4  s[4:7], s[8:11], s0                // 000001BC: C2820800
  s_buffer_load_dwordx4  s[0:3], s[8:11], s1                // 000001C0: C2800801
  v_mov_b32     v39, 1.0                                    // 000001C4: 7E4E02F2
  v_mov_b32     v40, 0                                      // 000001C8: 7E500280
  v_mov_b32     v41, 0                                      // 000001CC: 7E520280
  v_mov_b32     v42, 0                                      // 000001D0: 7E540280
  v_mov_b32     v43, 0                                      // 000001D4: 7E560280
  v_mov_b32     v44, 1.0                                    // 000001D8: 7E5802F2
  v_mov_b32     v45, 0                                      // 000001DC: 7E5A0280
  v_mov_b32     v46, 0                                      // 000001E0: 7E5C0280
  v_mov_b32     v47, 0                                      // 000001E4: 7E5E0280
  v_mov_b32     v48, 0                                      // 000001E8: 7E600280
  v_mov_b32     v49, 1.0                                    // 000001EC: 7E6202F2
  v_mov_b32     v50, 0                                      // 000001F0: 7E640280
  v_mov_b32     v51, 0                                      // 000001F4: 7E660280
  v_mov_b32     v52, 0                                      // 000001F8: 7E680280
  v_mov_b32     v53, 0                                      // 000001FC: 7E6A0280
  v_mov_b32     v54, 1.0                                    // 00000200: 7E6C02F2
  v_mac_f32     v24, s20, v12                               // 00000204: 3E301814
  v_mac_f32     v25, s21, v13                               // 00000208: 3E321A15
  v_add_f32     v11, s36, v18                               // 0000020C: 06162424
  v_add_f32     v12, s37, v19                               // 00000210: 06182625
  v_add_f32     v13, s38, v20                               // 00000214: 061A2826
  v_add_f32     v14, s39, v21                               // 00000218: 061C2A27
  v_mul_f32     v7, v7, v9                                  // 0000021C: 100E1307
  v_mul_f32     v8, v8, v9                                  // 00000220: 10101308
  v_mul_f32     v9, v10, v9                                 // 00000224: 1012130A
  v_mac_f32     v16, s40, v22                               // 00000228: 3E202C28
  v_mac_f32     v17, s41, v22                               // 0000022C: 3E222C29
  v_mac_f32     v4, s42, v22                                // 00000230: 3E082C2A
  v_cvt_i32_f32  v10, v23                                   // 00000234: 7E141117
  v_readfirstlane_b32  s13, v15                             // 00000238: 7E1A050F
  v_mov_b32     v15, 0                                      // 0000023C: 7E1E0280
  v_mov_b32     v18, 0                                      // 00000240: 7E240280
  v_mov_b32     v19, 0                                      // 00000244: 7E260280
  s_waitcnt     lgkmcnt(0)                                  // 00000248: BF8C007F
  v_cmp_ge_i32  vcc, s13, v10                               // 0000024C: 7D0C140D
  s_nop         0x0000                                      // 00000250: BF800000
  s_nop         0x0000                                      // 00000254: BF800000
  s_nop         0x0000                                      // 00000258: BF800000
  s_cbranch_vccnz  label_00F8                               // 0000025C: BF870060
label_0098:
  s_cmp_lt_i32  s13, 4                                      // 00000260: BF04840D
  s_cbranch_scc0  label_009F                                // 00000264: BF840005
  s_mov_b32     s14, s4                                     // 00000268: BE8E0304
  s_mov_b32     s15, s5                                     // 0000026C: BE8F0305
  s_mov_b32     s20, s6                                     // 00000270: BE940306
  s_mov_b32     s21, s7                                     // 00000274: BE950307
  s_branch      label_00A3                                  // 00000278: BF820004
label_009F:
  s_mov_b32     s14, s0                                     // 0000027C: BE8E0300
  s_mov_b32     s15, s1                                     // 00000280: BE8F0301
  s_mov_b32     s20, s2                                     // 00000284: BE940302
  s_mov_b32     s21, s3                                     // 00000288: BE950303
label_00A3:
  s_add_u32     s22, -4, s13                                // 0000028C: 80160DC4
  s_cmp_lt_i32  s13, 4                                      // 00000290: BF04840D
  s_cselect_b32  s22, s13, s22                              // 00000294: 8516160D
  s_lshl_b32    s22, s22, 4                                 // 00000298: 8F168416
  s_add_u32     s13, 1, s13                                 // 0000029C: 800D0D81
  s_lshr_b32    s48, s22, 2                                 // 000002A0: 90308216
  s_mov_b32     m0, s48                                     // 000002A4: BEFC0330
  v_movrels_b32  v21, v39                                   // 000002A8: 7E2A8727
  s_add_i32     s48, s22, 4                                 // 000002AC: 81308416
  s_lshr_b32    s48, s48, 2                                 // 000002B0: 90308230
  s_mov_b32     m0, s48                                     // 000002B4: BEFC0330
  v_movrels_b32  v22, v39                                   // 000002B8: 7E2C8727
  s_add_i32     s48, s22, 8                                 // 000002BC: 81308816
  s_lshr_b32    s48, s48, 2                                 // 000002C0: 90308230
  s_mov_b32     m0, s48                                     // 000002C4: BEFC0330
  v_movrels_b32  v23, v39                                   // 000002C8: 7E2E8727
  s_add_i32     s48, s22, 12                                // 000002CC: 81308C16
  s_lshr_b32    s48, s48, 2                                 // 000002D0: 90308230
  s_mov_b32     m0, s48                                     // 000002D4: BEFC0330
  v_movrels_b32  v20, v39                                   // 000002D8: 7E288727
  v_mul_f32     v21, s14, v21                               // 000002DC: 102A2A0E
  v_mac_f32     v21, s15, v22                               // 000002E0: 3E2A2C0F
  v_mac_f32     v21, s20, v23                               // 000002E4: 3E2A2E14
  v_mac_f32     v21, s21, v20                               // 000002E8: 3E2A2815
  v_cvt_i32_f32  v20, v21                                   // 000002EC: 7E281115
  v_add_i32     v21, vcc, 33, v20                           // 000002F0: 4A2A28A1
  tbuffer_load_format_xyzw  v[26:29], v21, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 000002F4: EBF32000 80021A15
  v_add_i32     v21, vcc, 17, v20                           // 000002FC: 4A2A2891
  v_add_i32     v22, vcc, 0x00000041, v20                   // 00000300: 4A2C28FF 00000041
  tbuffer_load_format_xyz  v[30:32], v21, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000308: EBEA2000 80021E15
  v_add_i32     v21, vcc, 49, v20                           // 00000310: 4A2A28B1
  tbuffer_load_format_xyz  v[33:35], v22, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000314: EBEA2000 80022116
  tbuffer_load_format_xy  v[21:22], v21, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32,BUF_NUM_FORMAT_FLOAT] // 0000031C: EBD92000 80021515
  tbuffer_load_format_xyz  v[36:38], v20, s[8:11], 0 idxen format:[BUF_DATA_FORMAT_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000324: EBEA2000 80022414
  s_waitcnt     vmcnt(4)                                    // 0000032C: BF8C0F74
  v_mad_f32     v26, -v3, v29, v26                          // 00000330: D282001A 246A3B03
  v_mad_f32     v27, -v5, v29, v27                          // 00000338: D282001B 246E3B05
  v_mul_f32     v20, v26, v26                               // 00000340: 1028351A
  v_mad_f32     v28, -v6, v29, v28                          // 00000344: D282001C 24723B06
  v_mac_f32     v20, v27, v27                               // 0000034C: 3E28371B
  v_mac_f32     v20, v28, v28                               // 00000350: 3E28391C
  v_max_f32     v20, 0x00800000, v20                        // 00000354: 202828FF 00800000
  v_rsq_f32     v23, v20                                    // 0000035C: 7E2E5D14
  v_mul_f32     v26, v26, v23                               // 00000360: 10342F1A
  s_waitcnt     vmcnt(3)                                    // 00000364: BF8C0F73
  v_mad_f32     v29, v20, v30, 1.0                          // 00000368: D282001D 03CA3D14
  v_mul_f32     v27, v27, v23                               // 00000370: 10362F1B
  v_rcp_f32     v29, v29                                    // 00000374: 7E3A551D
  s_waitcnt     vmcnt(2)                                    // 00000378: BF8C0F72
  v_mul_f32     v30, v26, v33                               // 0000037C: 103C431A
  v_mul_f32     v23, v28, v23                               // 00000380: 102E2F1C
  v_mac_f32     v30, v27, v34                               // 00000384: 3E3C451B
  v_mac_f32     v30, v23, v35                               // 00000388: 3E3C4717
  v_mad_f32     v32, v20, v31, v32 clamp                    // 0000038C: D2820820 04823F14
  s_waitcnt     vmcnt(1)                                    // 00000394: BF8C0F71
  v_mad_f32     v22, v30, v21, v22 clamp                    // 00000398: D2820816 045A2B1E
  v_mul_f32     v20, v0, v26                                // 000003A0: 10283500
  v_mul_f32     v21, v29, v32                               // 000003A4: 102A411D
  v_mul_f32     v22, v22, v22                               // 000003A8: 102C2D16
  v_mac_f32     v20, v27, v1                                // 000003AC: 3E28031B
  v_mul_f32     v21, v21, v22                               // 000003B0: 102A2D15
  v_mad_f32     v20, v23, v2, v20 clamp                     // 000003B4: D2820814 04520517
  s_waitcnt     vmcnt(0)                                    // 000003BC: BF8C0F70
  v_mul_f32     v22, v21, v37                               // 000003C0: 102C4B15
  v_mul_f32     v23, v21, v38                               // 000003C4: 102E4D15
  v_mul_f32     v21, v21, v20                               // 000003C8: 102A2915
  v_mac_f32     v15, v21, v36                               // 000003CC: 3E1E4915
  v_mac_f32     v18, v22, v20                               // 000003D0: 3E242916
  v_mac_f32     v19, v23, v20                               // 000003D4: 3E262917
  v_cmp_ge_i32  vcc, s13, v10                               // 000003D8: 7D0C140D
  s_cbranch_vccz  label_0098                                // 000003DC: BF86FFA0
label_00F8:
  s_movk_i32    s0, 0x0600                                  // 000003E0: B0000600
  s_buffer_load_dword  s0, s[8:11], s0                      // 000003E4: C2000800
  v_mov_b32     v10, 0                                      // 000003E8: 7E140280
  exp           param0, v24, v25, v10, v10                  // 000003EC: F800020F 0A0A1918
  exp           param1, v16, v17, v4, v10                   // 000003F4: F800021F 0A041110
  s_waitcnt     expcnt(0) & lgkmcnt(0)                      // 000003FC: BF8C000F
  v_mul_f32     v4, s0, v13                                 // 00000400: 10081A00
  exp           param2, v3, v5, v6, v10                     // 00000404: F800022F 0A060503
  exp           param3, v0, v1, v2, v10                     // 0000040C: F800023F 0A020100
  exp           param4, v7, v8, v9, v10                     // 00000414: F800024F 0A090807
  exp           pos0, v11, v12, v13, v14 done               // 0000041C: F80008CF 0E0D0C0B
  exp           param5, v4, v15, v18, v19                   // 00000424: F800025F 13120F04
  s_endpgm                                                  // 0000042C: BF810000
end
