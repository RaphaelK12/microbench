shader main
  asic(CI)
  type(PS)
                                                            // s_ps_state in s0

  s_mov_b64     s[56:57], exec                          // 000000000000: BEB8047E
  s_wqm_b64     exec, exec                              // 000000000004: BEFE0A7E
  s_mov_b32     s0, s1                                  // 000000000008: BE800301
  s_movk_i32    s1, 0x0000                              // 00000000000C: B0010000
  s_movk_i32    s3, 0x0000                              // 000000000010: B0030000
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x04           // 000000000014: C2820504
  s_load_dwordx8  s[8:15], s[0:1], 0x00                 // 000000000018: C0C40100
  s_load_dwordx8  s[16:23], s[2:3], 0x00                // 00000000001C: C0C80300
  s_load_dwordx8  s[24:31], s[0:1], 0x08                // 000000000020: C0CC0108
  s_load_dwordx8  s[32:39], s[0:1], 0x10                // 000000000024: C0D00110
  s_load_dwordx8  s[40:47], s[2:3], 0x08                // 000000000028: C0D40308
  s_load_dwordx8  s[48:55], s[0:1], 0x18                // 00000000002C: C0D80118
  s_waitcnt     lgkmcnt(0)                              // 000000000030: BF8C007F
  v_add_f32     v0, s4, v2                              // 000000000034: 06000404
  v_mov_b32     v1, s5                                  // 000000000038: 7E020205
  v_mac_legacy_f32  v1, s6, v3                          // 00000000003C: 0C020606
  v_mul_f32     v0, 0x3a000000, v0                      // 000000000040: 100000FF 3A000000
  v_mul_f32     v1, 0x3a000000, v1                      // 000000000048: 100202FF 3A000000
  image_sample  v[2:3], v[0:3], s[8:15], s[16:19] dmask:0x3 // 000000000050: F0800300 00820200
  s_nop         0x0000                                  // 000000000058: BF800000
  image_sample  v[4:5], v[0:3], s[24:31], s[20:23] dmask:0x3 // 00000000005C: F0800300 00A60400
  s_nop         0x0000                                  // 000000000064: BF800000
  image_sample  v[6:7], v[0:3], s[32:39], s[40:43] dmask:0x3 // 000000000068: F0800300 01480600
  s_nop         0x0000                                  // 000000000070: BF800000
  image_sample  v[8:9], v[0:3], s[48:55], s[44:47] dmask:0x3 // 000000000074: F0800300 016C0800
  s_load_dwordx8  s[4:11], s[0:1], 0x20                 // 00000000007C: C0C20120
  s_load_dwordx8  s[12:19], s[2:3], 0x10                // 000000000080: C0C60310
  s_load_dwordx8  s[20:27], s[0:1], 0x28                // 000000000084: C0CA0128
  s_load_dwordx8  s[28:35], s[0:1], 0x30                // 000000000088: C0CE0130
  s_load_dwordx8  s[36:43], s[2:3], 0x18                // 00000000008C: C0D20318
  s_load_dwordx8  s[44:51], s[0:1], 0x38                // 000000000090: C0D60138
  s_waitcnt     lgkmcnt(0)                              // 000000000094: BF8C007F
  image_sample  v[10:11], v[0:3], s[4:11], s[12:15] dmask:0x3 // 000000000098: F0800300 00610A00
  s_nop         0x0000                                  // 0000000000A0: BF800000
  image_sample  v[12:13], v[0:3], s[20:27], s[16:19] dmask:0x3 // 0000000000A4: F0800300 00850C00
  s_nop         0x0000                                  // 0000000000AC: BF800000
  image_sample  v[14:15], v[0:3], s[28:35], s[36:39] dmask:0x3 // 0000000000B0: F0800300 01270E00
  s_nop         0x0000                                  // 0000000000B8: BF800000
  image_sample  v[16:17], v[0:3], s[44:51], s[40:43] dmask:0x3 // 0000000000BC: F0800300 014B1000
  s_load_dwordx8  s[4:11], s[0:1], 0x40                 // 0000000000C4: C0C20140
  s_load_dwordx8  s[12:19], s[2:3], 0x20                // 0000000000C8: C0C60320
  s_load_dwordx8  s[20:27], s[0:1], 0x48                // 0000000000CC: C0CA0148
  s_load_dwordx8  s[28:35], s[0:1], 0x50                // 0000000000D0: C0CE0150
  s_load_dwordx8  s[36:43], s[2:3], 0x28                // 0000000000D4: C0D20328
  s_load_dwordx8  s[44:51], s[0:1], 0x58                // 0000000000D8: C0D60158
  s_waitcnt     lgkmcnt(0)                              // 0000000000DC: BF8C007F
  image_sample  v[18:19], v[0:3], s[4:11], s[12:15] dmask:0x3 // 0000000000E0: F0800300 00611200
  s_nop         0x0000                                  // 0000000000E8: BF800000
  image_sample  v[20:21], v[0:3], s[20:27], s[16:19] dmask:0x3 // 0000000000EC: F0800300 00851400
  s_nop         0x0000                                  // 0000000000F4: BF800000
  image_sample  v[22:23], v[0:3], s[28:35], s[36:39] dmask:0x3 // 0000000000F8: F0800300 01271600
  s_nop         0x0000                                  // 000000000100: BF800000
  image_sample  v[24:25], v[0:3], s[44:51], s[40:43] dmask:0x3 // 000000000104: F0800300 014B1800
  s_load_dwordx8  s[4:11], s[0:1], 0x60                 // 00000000010C: C0C20160
  s_load_dwordx8  s[12:19], s[2:3], 0x30                // 000000000110: C0C60330
  s_load_dwordx8  s[20:27], s[0:1], 0x68                // 000000000114: C0CA0168
  s_load_dwordx8  s[28:35], s[0:1], 0x70                // 000000000118: C0CE0170
  s_load_dwordx8  s[36:43], s[2:3], 0x38                // 00000000011C: C0D20338
  s_load_dwordx8  s[44:51], s[0:1], 0x78                // 000000000120: C0D60178
  s_waitcnt     lgkmcnt(0)                              // 000000000124: BF8C007F
  image_sample  v[26:27], v[0:3], s[4:11], s[12:15] dmask:0x3 // 000000000128: F0800300 00611A00
  s_nop         0x0000                                  // 000000000130: BF800000
  image_sample  v[28:29], v[0:3], s[20:27], s[16:19] dmask:0x3 // 000000000134: F0800300 00851C00
  s_nop         0x0000                                  // 00000000013C: BF800000
  image_sample  v[30:31], v[0:3], s[28:35], s[36:39] dmask:0x3 // 000000000140: F0800300 01271E00
  s_nop         0x0000                                  // 000000000148: BF800000
  image_sample  v[0:1], v[0:3], s[44:51], s[40:43] dmask:0x3 // 00000000014C: F0800300 014B0000
  s_waitcnt     vmcnt(14)                               // 000000000154: BF8C0F7E
  v_add_f32     v2, v2, v4                              // 000000000158: 06040902
  v_add_f32     v3, v3, v5                              // 00000000015C: 06060B03
  s_waitcnt     vmcnt(13)                               // 000000000160: BF8C0F7D
  v_add_f32     v2, v2, v6                              // 000000000164: 06040D02
  v_add_f32     v3, v3, v7                              // 000000000168: 06060F03
  s_waitcnt     vmcnt(12)                               // 00000000016C: BF8C0F7C
  v_add_f32     v2, v2, v8                              // 000000000170: 06041102
  v_add_f32     v3, v3, v9                              // 000000000174: 06061303
  s_waitcnt     vmcnt(11)                               // 000000000178: BF8C0F7B
  v_add_f32     v2, v2, v10                             // 00000000017C: 06041502
  v_add_f32     v3, v3, v11                             // 000000000180: 06061703
  s_waitcnt     vmcnt(10)                               // 000000000184: BF8C0F7A
  v_add_f32     v2, v2, v12                             // 000000000188: 06041902
  v_add_f32     v3, v3, v13                             // 00000000018C: 06061B03
  s_waitcnt     vmcnt(9)                                // 000000000190: BF8C0F79
  v_add_f32     v2, v2, v14                             // 000000000194: 06041D02
  v_add_f32     v3, v3, v15                             // 000000000198: 06061F03
  s_waitcnt     vmcnt(8)                                // 00000000019C: BF8C0F78
  v_add_f32     v2, v2, v16                             // 0000000001A0: 06042102
  v_add_f32     v3, v3, v17                             // 0000000001A4: 06062303
  s_waitcnt     vmcnt(7)                                // 0000000001A8: BF8C0F77
  v_add_f32     v2, v2, v18                             // 0000000001AC: 06042502
  v_add_f32     v3, v3, v19                             // 0000000001B0: 06062703
  s_waitcnt     vmcnt(6)                                // 0000000001B4: BF8C0F76
  v_add_f32     v2, v2, v20                             // 0000000001B8: 06042902
  v_add_f32     v3, v3, v21                             // 0000000001BC: 06062B03
  s_waitcnt     vmcnt(5)                                // 0000000001C0: BF8C0F75
  v_add_f32     v2, v2, v22                             // 0000000001C4: 06042D02
  v_add_f32     v3, v3, v23                             // 0000000001C8: 06062F03
  s_waitcnt     vmcnt(4)                                // 0000000001CC: BF8C0F74
  v_add_f32     v2, v2, v24                             // 0000000001D0: 06043102
  v_add_f32     v3, v3, v25                             // 0000000001D4: 06063303
  s_waitcnt     vmcnt(3)                                // 0000000001D8: BF8C0F73
  v_add_f32     v2, v2, v26                             // 0000000001DC: 06043502
  v_add_f32     v3, v3, v27                             // 0000000001E0: 06063703
  s_waitcnt     vmcnt(2)                                // 0000000001E4: BF8C0F72
  v_add_f32     v2, v2, v28                             // 0000000001E8: 06043902
  v_add_f32     v3, v3, v29                             // 0000000001EC: 06063B03
  s_waitcnt     vmcnt(1)                                // 0000000001F0: BF8C0F71
  v_add_f32     v2, v2, v30                             // 0000000001F4: 06043D02
  v_add_f32     v3, v3, v31                             // 0000000001F8: 06063F03
  s_waitcnt     vmcnt(0)                                // 0000000001FC: BF8C0F70
  v_add_f32     v0, v2, v0                              // 000000000200: 06000102
  v_add_f32     v1, v3, v1                              // 000000000204: 06020303
  v_mul_f32     v0, 0x3d800000, v0                      // 000000000208: 100000FF 3D800000
  v_mul_f32     v1, 0x3d800000, v1                      // 000000000210: 100202FF 3D800000
  v_mov_b32     v2, 0                                   // 000000000218: 7E040280
  v_mov_b32     v3, 1.0                                 // 00000000021C: 7E0602F2
  s_mov_b64     exec, s[56:57]                          // 000000000220: BEFE0438
  v_cvt_pkrtz_f16_f32  v0, v0, v1                       // 000000000224: 5E000300
  v_cvt_pkrtz_f16_f32  v1, v2, v3                       // 000000000228: 5E020702
  exp           mrt0, v0, v0, v1, v1 done compr vm      // 00000000022C: F8001C0F 00000100
  s_endpgm                                              // 000000000234: BF810000
end
