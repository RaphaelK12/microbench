shader main
  asic(SI)
  type(PS)
                                                            // s_ps_state in s0

  s_mov_b64     s[56:57], exec                              // 00000000: BEB8047E
  s_wqm_b64     exec, exec                                  // 00000004: BEFE0A7E
  s_mov_b32     s0, s1                                      // 00000008: BE800301
  s_movk_i32    s1, 0x0000                                  // 0000000C: B0010000
  s_movk_i32    s3, 0x0000                                  // 00000010: B0030000
  s_buffer_load_dwordx4  s[4:7], s[4:7], 0x04               // 00000014: C2820504
  s_load_dwordx8  s[8:15], s[0:1], 0x00                     // 00000018: C0C40100
  s_load_dwordx8  s[16:23], s[2:3], 0x00                    // 0000001C: C0C80300
  s_load_dwordx8  s[24:31], s[0:1], 0x08                    // 00000020: C0CC0108
  s_load_dwordx8  s[32:39], s[0:1], 0x10                    // 00000024: C0D00110
  s_load_dwordx8  s[40:47], s[2:3], 0x08                    // 00000028: C0D40308
  s_load_dwordx8  s[48:55], s[0:1], 0x18                    // 0000002C: C0D80118
  s_waitcnt     lgkmcnt(0)                                  // 00000030: BF8C007F
  v_add_f32     v0, s4, v2                                  // 00000034: 06000404
  v_mov_b32     v1, s5                                      // 00000038: 7E020205
  v_mac_legacy_f32  v1, s6, v3                              // 0000003C: 0C020606
  v_mul_f32     v0, 0x3a000000, v0                          // 00000040: 100000FF 3A000000
  v_mul_f32     v1, 0x3a000000, v1                          // 00000048: 100202FF 3A000000
  image_sample  v[2:3], v[0:3], s[8:15], s[16:19] dmask:0x3 // 00000050: F0800300 00820200
  s_nop         0x0000                                      // 00000058: BF800000
  image_sample  v[4:5], v[0:3], s[24:31], s[20:23] dmask:0x3 // 0000005C: F0800300 00A60400
  s_nop         0x0000                                      // 00000064: BF800000
  image_sample  v[6:7], v[0:3], s[32:39], s[40:43] dmask:0x3 // 00000068: F0800300 01480600
  s_nop         0x0000                                      // 00000070: BF800000
  image_sample  v[8:9], v[0:3], s[48:55], s[44:47] dmask:0x3 // 00000074: F0800300 016C0800
  s_load_dwordx8  s[4:11], s[0:1], 0x20                     // 0000007C: C0C20120
  s_load_dwordx8  s[12:19], s[2:3], 0x10                    // 00000080: C0C60310
  s_load_dwordx8  s[20:27], s[0:1], 0x28                    // 00000084: C0CA0128
  s_load_dwordx8  s[28:35], s[0:1], 0x30                    // 00000088: C0CE0130
  s_load_dwordx8  s[36:43], s[2:3], 0x18                    // 0000008C: C0D20318
  s_load_dwordx8  s[44:51], s[0:1], 0x38                    // 00000090: C0D60138
  s_waitcnt     lgkmcnt(0)                                  // 00000094: BF8C007F
  image_sample  v[10:11], v[0:3], s[4:11], s[12:15] dmask:0x3 // 00000098: F0800300 00610A00
  s_nop         0x0000                                      // 000000A0: BF800000
  image_sample  v[12:13], v[0:3], s[20:27], s[16:19] dmask:0x3 // 000000A4: F0800300 00850C00
  s_nop         0x0000                                      // 000000AC: BF800000
  image_sample  v[14:15], v[0:3], s[28:35], s[36:39] dmask:0x3 // 000000B0: F0800300 01270E00
  s_nop         0x0000                                      // 000000B8: BF800000
  image_sample  v[16:17], v[0:3], s[44:51], s[40:43] dmask:0x3 // 000000BC: F0800300 014B1000
  s_load_dwordx8  s[4:11], s[0:1], 0x40                     // 000000C4: C0C20140
  s_load_dwordx8  s[12:19], s[2:3], 0x20                    // 000000C8: C0C60320
  s_load_dwordx8  s[20:27], s[0:1], 0x48                    // 000000CC: C0CA0148
  s_load_dwordx8  s[28:35], s[0:1], 0x50                    // 000000D0: C0CE0150
  s_load_dwordx8  s[36:43], s[2:3], 0x28                    // 000000D4: C0D20328
  s_load_dwordx8  s[44:51], s[0:1], 0x58                    // 000000D8: C0D60158
  s_waitcnt     lgkmcnt(0)                                  // 000000DC: BF8C007F
  image_sample  v[18:19], v[0:3], s[4:11], s[12:15] dmask:0x3 // 000000E0: F0800300 00611200
  s_nop         0x0000                                      // 000000E8: BF800000
  image_sample  v[20:21], v[0:3], s[20:27], s[16:19] dmask:0x3 // 000000EC: F0800300 00851400
  s_nop         0x0000                                      // 000000F4: BF800000
  image_sample  v[22:23], v[0:3], s[28:35], s[36:39] dmask:0x3 // 000000F8: F0800300 01271600
  s_nop         0x0000                                      // 00000100: BF800000
  image_sample  v[24:25], v[0:3], s[44:51], s[40:43] dmask:0x3 // 00000104: F0800300 014B1800
  s_load_dwordx8  s[4:11], s[0:1], 0x60                     // 0000010C: C0C20160
  s_load_dwordx8  s[12:19], s[2:3], 0x30                    // 00000110: C0C60330
  s_load_dwordx8  s[20:27], s[0:1], 0x68                    // 00000114: C0CA0168
  s_load_dwordx8  s[28:35], s[0:1], 0x70                    // 00000118: C0CE0170
  s_load_dwordx8  s[36:43], s[2:3], 0x38                    // 0000011C: C0D20338
  s_load_dwordx8  s[44:51], s[0:1], 0x78                    // 00000120: C0D60178
  s_waitcnt     lgkmcnt(0)                                  // 00000124: BF8C007F
  image_sample  v[26:27], v[0:3], s[4:11], s[12:15] dmask:0x3 // 00000128: F0800300 00611A00
  s_nop         0x0000                                      // 00000130: BF800000
  image_sample  v[28:29], v[0:3], s[20:27], s[16:19] dmask:0x3 // 00000134: F0800300 00851C00
  s_nop         0x0000                                      // 0000013C: BF800000
  image_sample  v[30:31], v[0:3], s[28:35], s[36:39] dmask:0x3 // 00000140: F0800300 01271E00
  s_nop         0x0000                                      // 00000148: BF800000
  image_sample  v[0:1], v[0:3], s[44:51], s[40:43] dmask:0x3 // 0000014C: F0800300 014B0000
  s_waitcnt     vmcnt(14)                                   // 00000154: BF8C0F7E
  v_add_f32     v2, v2, v4                                  // 00000158: 06040902
  v_add_f32     v3, v3, v5                                  // 0000015C: 06060B03
  s_waitcnt     vmcnt(13)                                   // 00000160: BF8C0F7D
  v_add_f32     v2, v2, v6                                  // 00000164: 06040D02
  v_add_f32     v3, v3, v7                                  // 00000168: 06060F03
  s_waitcnt     vmcnt(12)                                   // 0000016C: BF8C0F7C
  v_add_f32     v2, v2, v8                                  // 00000170: 06041102
  v_add_f32     v3, v3, v9                                  // 00000174: 06061303
  s_waitcnt     vmcnt(11)                                   // 00000178: BF8C0F7B
  v_add_f32     v2, v2, v10                                 // 0000017C: 06041502
  v_add_f32     v3, v3, v11                                 // 00000180: 06061703
  s_waitcnt     vmcnt(10)                                   // 00000184: BF8C0F7A
  v_add_f32     v2, v2, v12                                 // 00000188: 06041902
  v_add_f32     v3, v3, v13                                 // 0000018C: 06061B03
  s_waitcnt     vmcnt(9)                                    // 00000190: BF8C0F79
  v_add_f32     v2, v2, v14                                 // 00000194: 06041D02
  v_add_f32     v3, v3, v15                                 // 00000198: 06061F03
  s_waitcnt     vmcnt(8)                                    // 0000019C: BF8C0F78
  v_add_f32     v2, v2, v16                                 // 000001A0: 06042102
  v_add_f32     v3, v3, v17                                 // 000001A4: 06062303
  s_waitcnt     vmcnt(7)                                    // 000001A8: BF8C0F77
  v_add_f32     v2, v2, v18                                 // 000001AC: 06042502
  v_add_f32     v3, v3, v19                                 // 000001B0: 06062703
  s_waitcnt     vmcnt(6)                                    // 000001B4: BF8C0F76
  v_add_f32     v2, v2, v20                                 // 000001B8: 06042902
  v_add_f32     v3, v3, v21                                 // 000001BC: 06062B03
  s_waitcnt     vmcnt(5)                                    // 000001C0: BF8C0F75
  v_add_f32     v2, v2, v22                                 // 000001C4: 06042D02
  v_add_f32     v3, v3, v23                                 // 000001C8: 06062F03
  s_waitcnt     vmcnt(4)                                    // 000001CC: BF8C0F74
  v_add_f32     v2, v2, v24                                 // 000001D0: 06043102
  v_add_f32     v3, v3, v25                                 // 000001D4: 06063303
  s_waitcnt     vmcnt(3)                                    // 000001D8: BF8C0F73
  v_add_f32     v2, v2, v26                                 // 000001DC: 06043502
  v_add_f32     v3, v3, v27                                 // 000001E0: 06063703
  s_waitcnt     vmcnt(2)                                    // 000001E4: BF8C0F72
  v_add_f32     v2, v2, v28                                 // 000001E8: 06043902
  v_add_f32     v3, v3, v29                                 // 000001EC: 06063B03
  s_waitcnt     vmcnt(1)                                    // 000001F0: BF8C0F71
  v_add_f32     v2, v2, v30                                 // 000001F4: 06043D02
  v_add_f32     v3, v3, v31                                 // 000001F8: 06063F03
  s_waitcnt     vmcnt(0)                                    // 000001FC: BF8C0F70
  v_add_f32     v0, v2, v0                                  // 00000200: 06000102
  v_add_f32     v1, v3, v1                                  // 00000204: 06020303
  v_mul_f32     v0, 0x3d800000, v0                          // 00000208: 100000FF 3D800000
  v_mul_f32     v1, 0x3d800000, v1                          // 00000210: 100202FF 3D800000
  v_mov_b32     v2, 0                                       // 00000218: 7E040280
  v_mov_b32     v3, 1.0                                     // 0000021C: 7E0602F2
  s_mov_b64     exec, s[56:57]                              // 00000220: BEFE0438
  v_cvt_pkrtz_f16_f32  v0, v0, v1                           // 00000224: 5E000300
  v_cvt_pkrtz_f16_f32  v1, v2, v3                           // 00000228: 5E020702
  exp           mrt0, v0, v0, v1, v1 done compr vm          // 0000022C: F8001C0F 00000100
  s_endpgm                                                  // 00000234: BF810000
end
